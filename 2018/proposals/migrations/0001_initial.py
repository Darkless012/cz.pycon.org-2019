# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2017-11-24 20:59
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FinancialAid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('accepted', models.BooleanField(default=False)),
                ('full_name', models.CharField(max_length=200, verbose_name='Your name')),
                ('email', models.EmailField(help_text="We'll keep it secret, for internal use only.", max_length=254)),
                ('bio', models.TextField(help_text='Tell us a bit about yourself! Who you are, where you are from, and what your experiences with Python are. Also include how you are involved in Python community and how you contribute or plan to contribute to the community.')),
                ('amount', models.CharField(help_text='How much money would you like to get (please specify currency).', max_length=255)),
                ('purpose', models.TextField(help_text='How would you like to use granted money?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField(help_text='4 = Must have!, 3 = Interesting talk, 2 = Meh, 1 = Definitely not!', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('note', models.TextField(blank=True, default='', help_text='Only you can see this')),
                ('ranking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='proposals.Ranking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_add_score', 'Can add score'),),
            },
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('accepted', models.BooleanField(default=False)),
                ('full_name', models.CharField(max_length=200, verbose_name='Your name')),
                ('email', models.EmailField(help_text="We'll keep it secret, for internal use only.", max_length=254)),
                ('bio', models.TextField(help_text='Tell us a bit about yourself! Who you are, where are you from, what are your experiences with Python. Be wild, be creative!')),
                ('twitter', models.CharField(blank=True, help_text='Optional', max_length=255, verbose_name='Twitter handle')),
                ('github', models.CharField(blank=True, help_text='Optional', max_length=255, verbose_name='GitHub username')),
                ('photo', models.ImageField(help_text='Photo of yourself which we can publish on our website', upload_to='proposals/pyconcz2016/talks/', verbose_name='Your picture')),
                ('title', models.CharField(help_text='This is going to be public on all posters! Make up some catchy title which attracts audience.', max_length=200, verbose_name='Talk title')),
                ('abstract', models.TextField(help_text='Full description of your talk. How would you describe yourtalk to the audience?')),
                ('language', models.CharField(choices=[('en', 'English (preferred)'), ('cs', 'Czechoslovak')], default='en', max_length=2)),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('advanced', 'Advanced')], default='beginner', help_text='Does you audience require high level of Python knowledgeor is it suitable for everyone?', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('accepted', models.BooleanField(default=False)),
                ('full_name', models.CharField(max_length=200, verbose_name='Your name')),
                ('email', models.EmailField(help_text="We'll keep it secret, for internal use only.", max_length=254)),
                ('bio', models.TextField(help_text='Tell us a bit about yourself! Who you are, where are you from, what are your experiences with Python. Be wild, be creative!')),
                ('twitter', models.CharField(blank=True, help_text='Optional', max_length=255, verbose_name='Twitter handle')),
                ('github', models.CharField(blank=True, help_text='Optional', max_length=255, verbose_name='GitHub username')),
                ('photo', models.ImageField(help_text='Photo of yourself which we can publish on our website', upload_to='proposals/pyconcz2016/talks/', verbose_name='Your picture')),
                ('type', models.CharField(choices=[('workshop', 'Workshop'), ('sprint', 'Sprint')], default='sprint', help_text="At a workshop, you should present hands-on excercises for participants to learn from. You'll get a room and a slot in the agenda, and participants will need to register.\n At a sprint, participants help an open-source project -- usually by cloning the repo and trying to fix beginner-level issues, while you'll provide one-to-one mentorship. If several experienced developers are around, sprints are also a good place for serious design discussions. Sprinters only need a table to sit around, reliable wifi, and dedication to do great things!", max_length=10)),
                ('title', models.CharField(help_text='Public title. What topic/project is it all about?', max_length=200, verbose_name='Workshop/sprint title')),
                ('abstract', models.TextField(help_text='Full description of your workshop or sprint. Please also describe requirements: libraries and Python version to be installed, required experience with topics/libraries, etc.')),
                ('language', models.CharField(choices=[('en', 'English (preferred)'), ('cs', 'Czech/Slovak')], default='en', max_length=2)),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('advanced', 'Advanced')], default='beginner', help_text='Does you audience require high level of specialized knowledge (of Python, a library, etc.), or is it suitable for everyone?', max_length=10)),
                ('length', models.CharField(blank=True, choices=[('1h', '1 hour'), ('2h', '2 hours'), ('2h', '3 hours'), ('1d', 'Full day (most sprints go here!)'), ('xx', 'Something else! (Please leave a note in the abstract!)')], help_text='How much time does your workshop take? Sprints usually take the whole day, but workshops are organized in smaller blocks. You can also have a full-day workshop with lunch break, but keep in mind that the length could discourage attendees!', max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='ranking',
            unique_together=set([('content_type', 'object_id')]),
        ),
    ]
