# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-11-05 19:14
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='FinancialAid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, default='')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('accepted', models.BooleanField(default=False)),
                ('full_name', models.CharField(max_length=200, verbose_name='Your name')),
                ('email', models.EmailField(help_text='We’ll send information about your application result to this address.', max_length=254, verbose_name='Your email address')),
                ('python_involvement', models.CharField(help_text='e.g. You’re learning it or teaching it or using for something…', max_length=400, null=True, verbose_name='What is your connection with Python?')),
                ('community_involvement', models.TextField(blank=True, help_text='It’s a plus but we don’t limit Financial Aid to those who do.', null=True, verbose_name='Do you contribute or plan to contribute to Python community in any way? (optional)')),
                ('purpose', models.TextField(help_text='If you require help for more items (accomodation, travel costs etc.) please state the amount for each of them in Euros.\nYou don’t need to specify the price of a ticket.\nPlease use following conversion rates: 1 Euro = 25 Czech Korunas = $1.23', verbose_name='What do you need the money for exactly?')),
                ('amount', models.CharField(help_text='If you require just a free ticket, please state “ticket”.\nPlease use following conversion rates: 1 Euro = 25 Czech Korunas = $1.23', max_length=255, verbose_name='How much total money would you like to receive (in Euros)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ranking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(blank=True, decimal_places=1, help_text='4 = Must have!, 3 = Interesting talk, 2 = Meh, 1 = Definitely not!, blank value = No score (f.e. your proposal); you can also use decimals', max_digits=2, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('note', models.TextField(blank=True, default='', help_text='Only you can see this')),
                ('ranking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='proposals.Ranking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('can_add_score', 'Can add score'),),
            },
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, default='')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('accepted', models.BooleanField(default=False)),
                ('full_name', models.CharField(help_text='This will be published in the schedule, so use a name that you’re comfortable with, or a nickname.', max_length=200, verbose_name='What’s your name?')),
                ('email', models.EmailField(help_text='We’ll keep it secret, for internal use only.', max_length=254, verbose_name='Your email address')),
                ('bio', models.TextField(help_text='Tell your audience in first person about anything relevant about you, whether it’s your background, education, experience, current or former employer, hobbies or opensource software you maintain.\nTry keeping it between between 50 and 90 words.\nYou can of course include anything fun or quirky about yourself.', verbose_name='Why are you the right person to talk about the topic you chose?')),
                ('referral_link', models.URLField(blank=True, default='', help_text='If you already have a recording of you giving a talk, you can paste the link here.', verbose_name='Got a video?')),
                ('twitter', models.CharField(blank=True, help_text='Optional. Write it without the @.', max_length=255, verbose_name='Twitter handle')),
                ('github', models.CharField(blank=True, help_text='Optional. Write it without the @.', max_length=255, verbose_name='GitHub username')),
                ('photo', models.ImageField(help_text='It will be published on the website.\nIdeal photo is: a head shot, shows only you, has no “filters” applied and is as large and uncompressed as possible.\nWe might crop it and change contrast, brightness etc. to fit PyCon CZ visual style.', upload_to='proposals/pyconcz2018/talks/', verbose_name='Your photo (not an\xa0illustration nor\xa0avatar)')),
                ('title', models.CharField(help_text='This will be published everywhere! Make up some catchy title which will attract the audience.', max_length=200, verbose_name='What is the title of your talk?')),
                ('abstract', models.TextField(help_text='Introduce the problem your talk will bring a solution to. Then explain why it’s a problem worth solving and use the last paragraph to tell your audience what is your approach to solving it.', verbose_name='Tell the audience about your talk in 1–3 paragraphs (90–200 words)')),
                ('language', models.CharField(choices=[('en', 'English (preferred)'), ('cs', 'Czech or Slovak')], default='en', help_text='English is preferred, but if you feel uncomfortable with it, you can give your talk in Czech or Slovak', max_length=2)),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner  (suitable for everyone)'), ('advanced', 'Advanced  (requires a high level of Python knowledge)')], default='beginner', max_length=10)),
                ('needs_finaid', models.BooleanField(default=False, help_text='Covering travel or accommodation costs etc. Please specify this here and now, otherwise we might not be able to grant you the aid.', verbose_name='I need financial aid to make this talk possible')),
                ('finaid_details', models.TextField(blank=True, help_text='Please state explicitly:\n1) why you need it,\n2) what for and\n3) how much in EUR or CZK.\nIf you require aid for more items (accommodation, travel costs etc.) please state the amount for each item.', null=True, verbose_name='Details about required financial aid')),
                ('final_note', models.TextField(blank=True, null=True, verbose_name='Anything else you want to tell us?')),
                ('is_backup', models.BooleanField(default=False)),
                ('is_keynote', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, default='')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('accepted', models.BooleanField(default=False)),
                ('full_name', models.CharField(help_text='This will be published in the schedule, so use a name that you’re comfortable with, or a nickname.', max_length=200, verbose_name='What’s your name?')),
                ('email', models.EmailField(help_text='We’ll keep it secret, for internal use only.', max_length=254, verbose_name='Your email address')),
                ('bio', models.TextField(help_text='Tell your audience in first person about anything relevant about you, whether it’s your background, education, experience, current or former employer, hobbies or opensource software you maintain.\nTry keeping it between between 50 and 90 words.\nYou can of course include anything fun or quirky about yourself.', verbose_name='Why are you the right person to talk about the topic you chose?')),
                ('referral_link', models.URLField(blank=True, default='', help_text='If you have a recording of you giving a talk or leading a workshop, you can paste the link here.', verbose_name='Got a video?')),
                ('twitter', models.CharField(blank=True, help_text='Optional. Write it without the @.', max_length=255, verbose_name='Twitter handle')),
                ('github', models.CharField(blank=True, help_text='Optional. Write it without the @.', max_length=255, verbose_name='GitHub username')),
                ('photo', models.ImageField(help_text='It will be published on the website.\nIdeal photo is: a head shot, shows only you, has no “filters” applied and is as large and uncompressed as possible.\nWe might crop it and change contrast, brightness etc. to fit PyCon CZ visual style.', upload_to='proposals/pyconcz2018/talks/', verbose_name='Your photo (not an\xa0illustration nor\xa0avatar)')),
                ('type', models.CharField(choices=[('workshop', 'Workshop'), ('sprint', 'Sprint')], default='sprint', help_text='At a workshop, you should present hands-on exercises for participants to learn from. You’ll get a room and a slot in the agenda, and participants will need to register.\nAt a sprint, participants help an open-source project – usually by cloning the repo and trying to fix beginner-level issues, while you’ll provide one-to-one mentorship. If several experienced developers are around, sprints are also a good place for serious design discussions. Sprinters only need a table to sit around, reliable wifi, and dedication to do great things!', max_length=10)),
                ('title', models.CharField(help_text='Public title. What topic/project is it all about?', max_length=200, verbose_name='What is the title of your workshop or sprint?')),
                ('abstract', models.TextField(help_text='Describe your workshop or sprint.\nPlease include the requirements: libraries and Python version to be installed, required experience with topics/libraries, etc.', verbose_name='Tell the audience about your talk in 1–3 paragraphs (90–200 words)')),
                ('language', models.CharField(choices=[('en', 'English (preferred)'), ('cs', 'Czech or Slovak')], default='en', max_length=2)),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner  (suitable for everyone)'), ('advanced', 'Advanced  (requires a high level of Python knowledge)')], default='beginner', max_length=10)),
                ('length', models.CharField(blank=True, choices=[('1h', '1 hour'), ('2h', '2 hours'), ('2h', '3 hours'), ('1d', 'Full day (most sprints go here!)'), ('xx', 'Something else! (Please leave a note in the abstract)')], help_text='Sprints usually take the whole day, but workshops are organized in smaller blocks. You can also have a full-day workshop with lunch break, but keep in mind that the length could discourage attendees.', max_length=2, verbose_name='How much time does your workshop take?')),
                ('needs_finaid', models.BooleanField(default=False, help_text='Covering travel or accommodation costs etc. Please specify this here and now, otherwise we might not be able to grant you the aid.', verbose_name='I need financial aid to make this workshop possible')),
                ('finaid_details', models.TextField(blank=True, help_text='Please state explicitly:\n1) why you need it,\n2) what for and\n3) how much in Euros.\nIf you require help for more items (accomodation, travel costs etc.) please state the amount for each item.', null=True, verbose_name='Details about required financial aid')),
                ('requirements', models.TextField(blank=True, help_text='Do you have any special requirements? What do attendees need to bring? Do you need anything more than a room with wifi, standard euro sockets and a projector?', null=True, verbose_name='Extra requirements')),
                ('final_note', models.TextField(blank=True, null=True, verbose_name='Anything else you want to tell us?')),
                ('is_backup', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='ranking',
            unique_together=set([('content_type', 'object_id')]),
        ),
    ]
